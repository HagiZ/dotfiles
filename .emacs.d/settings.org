
* Emacs Settings
#+BEGIN_SRC emacs-lisp
(setq inhibit-startup-message t)
(tool-bar-mode -1)
(fset 'yes-or-no-p 'y-or-n-p)
(global-set-key (kbd "<f5>") 'revert-buffer)
(linum-mode 1)
#+END_SRC


* Packages
** Try
#+BEGIN_SRC emacs-lisp
(use-package try
 :ensure t)
#+END_SRC

** Which-key
#+BEGIN_SRC emacs-lisp
(use-package which-key
 :ensure t
 :config (which-key-mode))
#+END_SRC

** Org-mode stuff
#+BEGIN_SRC emacs-lisp
(use-package org-bullets
 :ensure t
 :config 
  (add-hook 'org-mode-hook (lambda () (org-bullets-mode))))


#+END_SRC

** ACE windows
#+BEGIN_SRC emacs-lisp
(use-package ace-window
 :ensure t
 :init
 (progn
 (setq aw-scope 'frame)
 (global-set-key (kbd "C-x O") 'other-frame)
  (global-set-key [remap other-window] 'ace-window)
  (custom-set-faces
   '(aw-leading-char-face
    ((t (:inherit ace-jump-face-foreground :height 3.0)))))
 ))
#+END_SRC

** Swiper / Ivy / Counsel
#+BEGIN_SRC emacs-lisp
(use-package counsel
 :ensure t
 :bind
  (("M-y" . counsel-yank-pop)
  :map ivy-minibuffer-map
  ("M-y" . ivy-next-line)))

(use-package ivy
 :ensure t
 :diminish (ivy-mode)
 :bind (("C-x b" . ivy-switch-buffer))
 :config
 (ivy-mode 1)
 (setq ivy-use-virtual-buffers t)
 (setq ivy-display-style 'fancy))

(use-package swiper
 :ensure t
 :bind (("C-s" . swiper)
        ("C-r" . swiper)
        ("C-c C-r" . ivy-resume)
        ("M-x" . counsel-M-x)
        ("C-x C-f" . counsel-find-file))
 :config
  (progn
   (ivy-mode 1)
   (setq ivy-use-virtual-buffers t)
   (setq ivy-display-style 'fancy)
   (define-key read-expression-map (kbd "C-r") 'counsel-expression-history)
))
#+END_SRC

** Avy - navigation
#+BEGIN_SRC emacs-lisp
(use-package avy
 :ensure t
 :bind ("M-s" . avy-goto-word-1))
#+END_SRC 

** Autocomplete
#+BEGIN_SRC emacs-lisp
(use-package auto-complete
 :ensure t
 :init
  (progn
   (ac-config-default)
   (global-auto-complete-mode t)
))
#+END_SRC

** Themes and modeline
#+BEGIN_SRC emacs-lisp
(use-package color-theme
 :ensure t)

;(use-package zenburn-theme
; :ensure t
; :config (load-theme 'zenburn t))

(use-package base16-theme
 :ensure t)

;(use-package moe-theme
; :ensure t)

(load-theme 'base16-flat t)

;(moe-light)

(use-package powerline
 :ensure t
 ;:config (powerline-moe-theme)
)
#+END_SRC

** Reveal.js
  #+BEGIN_SRC emacs-lisp
  (use-package ox-reveal
   :ensure ox-reveal)

   (setq org-reveal-root "http://cdn.jsdelivr.net/reveal.js/3.0.0/")
   (setq org-reveal-mathjax t)

  (use-package htmlize
   :ensure t)
#+END_SRC

